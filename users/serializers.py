import random
import string
from django.core.mail import send_mail
from rest_framework import serializers
from .models import CustomUser

# Function to generate a random password
def generate_password(length=8):
    return "".join(random.choices(string.ascii_letters + string.digits, k=length))

# User Serializer
class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = CustomUser
        fields = ["id", "email", "name", "role"]

# Registration Serializer
class RegisterSerializer(serializers.ModelSerializer):
    # Make password not required for students, since it will be autogenerated.
    password = serializers.CharField(write_only=True, required=False)

    class Meta:
        model = CustomUser
        fields = ["email", "name", "role", "password"]

    def create(self, validated_data):
        # If the role is 'student', generate a random password
        if validated_data.get("role") == "student":
            password = generate_password()
            validated_data["password"] = password
            user = CustomUser.objects.create_user(**validated_data)

            # Send email with the autogenerated password
            send_mail(
                subject="Welcome to LMS - Your Login Credentials",
                message=(
                    f"Hello {user.name},\n\n"
                    f"Your account has been created.\n\n"
                    f"Email: {user.email}\n"
                    f"Password: {password}\n\n"
                    "Please log in and change your password.\n\n"
                    "Best,\nLMS Team"
                ),
                from_email="your-email@gmail.com",  # Replace with your email
                recipient_list=[user.email],
                fail_silently=False,
            )
            return user

        # For other roles, use the provided password if available.
        return CustomUser.objects.create_user(**validated_data)

# Login Serializer
class LoginSerializer(serializers.Serializer):
    email = serializers.EmailField()
    password = serializers.CharField(write_only=True)

    def validate(self, data):
        from django.contrib.auth import authenticate
        user = authenticate(email=data["email"], password=data["password"])
        if not user:
            raise serializers.ValidationError("Invalid credentials")
        return user
